function [ outF, outFDes ] = stateTransitionMatrixBuilder(inF, inDes, varargin)
%STATETRANSITIONMATRIXBUILDER Summary of this function goes here
%   Detailed explanation goes here
nVarargs = length(varargin);
nVarInDes = length(inDes);
outF=NaN(nVarargs/2,nVarargs/2);
%('s','s_x','s','s_y','s','s_z','v','v_x','v','v_y','v','v_z')
%('s','s_x','v','v_x','s','s_y','v','v_y','s','s_z','v','v_z')
for i=1:nVarargs/2
    for j=1:nVarargs/2
        if strcmp(getPostFix(varargin{(i-1)+(i+1)}),getPostFix(varargin{(j-1)+(j+1)}))
        else
            outF(i,j)=0;
        end
        % i=1,j=1
        % j=1 führt zu
        % varargin(1)=(j-1)+j
        % varargin(2)=(j-1)+(j+1)
        % if i=j, outF(i,j)=inF(i,n), n= find(inDes(:),varargin(j))
        %
        % j=2
        % führt zu
        % varargin(3)=(j-1)+j
        % varargin(4)=(j-1)+(j+1)
        % outF(i,j)=inF(i,n)     n=find(inDes(:),varargin(j+1))
        %
        % j=3
        % führt zu
        % varargin(5)=(j-1)+j
        % varargin(6)=(j-1)+(j+1)
        % outF(i,j)=inF(
        
    end
end
end

function postfix = getPostFix(inString)
postfix=inString(2:end);
end

